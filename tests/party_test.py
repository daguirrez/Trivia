import sys
import unittest
import json
import base64
from urllib.parse import unquote
from unittest.mock import Mock, MagicMock, patch
from requests import exceptions as rex

sys.path.append("../modules")

import party as pty
from trivia import Category, Difficulty, Match


class TriviaPartyTest(unittest.TestCase):
	@patch("requests.get")
	def __request_tests(self, tests, mock):
		for t in tests:
			mock.return_value = MagicMock()
			mock.return_value.json = lambda: json.loads(base64.b64decode(t["result"]).decode())

			trivia = pty.TriviaParty(
				category = t["category"],
				difficulty = t["difficulty"]
			)

			output = trivia.get_match()
			expected = ApiDataTest.get_expected_questions(t)

			mock.assert_called_with(t["url"])

			# check questions
			for q in output.questions:
				self.assertIn(q.question, [k["question"] for k in expected])
				self.assertIn(q.correct_answer, [k["correct_answer"] for k in expected])
				
				for a in q.answers:
					self.assertIn(a, [k for e in expected for k in e["answers"]])

			# check match data
			self.assertEqual(output.category.name, t["category"].name)
			self.assertEqual(output.difficulty, t["difficulty"])


	@patch("requests.get")
	def test_request_error(self, mock):
		exceptions = [
			rex.ConnectionError(), 
			rex.HTTPError(),
			rex.Timeout(),
			rex.TooManyRedirects()
		]
		
		for e in exceptions:
			mock.return_value.raiseError.side_effect = Mock(side_effect = e)

			trivia = pty.TriviaParty()
			output = trivia.get_match()

			self.assertIsNone(output)

	@patch("requests.get")
	def test_error_codes(self, mock):
		err_codes = ["1", "2"]
		
		for code in err_codes:
			mock.return_value = MagicMock()
			mock.return_value.json: lambda: f'{{"response_code":{code},"results":[]}}'

			trivia = pty.TriviaParty()
			output = trivia.get_match()

			self.assertIsNone(output)

	def test_category_books(self):
		self.__request_tests(ApiDataTest.get_test_data(Category("Books")))


class ApiDataTest:
	@classmethod
	def get_expected_questions(cls, data):
		result = json.loads(base64.b64decode(data["result"]).decode()) # get json data

		# get questions
		questions = [{
			"question" 			: unquote(r["question"]),
			"answers"			: [unquote(a) for a in r["incorrect_answers"]],
			"correct_answer"	: unquote(r["correct_answer"])
		 } for r in result["results"]]

		# add the correct answer into answers
		for q in questions:
			q["answers"].append(q["correct_answer"])

		return questions


	@classmethod
	def get_test_data(cls, category, difficulty = None):
		return [data for data in cls.__data_tests if data["category"].name == category.name and (difficulty == None or data["difficulty"] == difficulty)]

	__data_tests = [
		# Books - 10 - EASY
		{
			"difficulty": Difficulty.easy,
			"category": Category("Books"),
			"url": "https://opentdb.com/api.php?amount=10&category=10&difficulty=easy&type=multiple&encode=url3986",
			"result": "eyJyZXNwb25zZV9jb2RlIjowLCJyZXN1bHRzIjpbeyJjYXRlZ29yeSI6IkVudGVydGFpbm1lbnQlM0ElMjBCb29rcyIsInR5cGUiOiJtdWx0aXBsZSIsImRpZmZpY3VsdHkiOiJlYXN5IiwicXVlc3Rpb24iOiJXaG8lMjB3cm90ZSUyMCUyMkhhcnJ5JTIwUG90dGVyJTIyJTNGIiwiY29ycmVjdF9hbnN3ZXIiOiJKLksuJTIwUm93bGluZyIsImluY29ycmVjdF9hbnN3ZXJzIjpbIkouUi5SLiUyMFRvbGtpZW4iLCJUZXJyeSUyMFByYXRjaGV0dCIsIkRhbmllbCUyMFJhZGNsaWZmZSJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldobyUyMHdyb3RlJTIwdGhlJTIwbm92ZWwlMjAlMjdGZWFyJTIwQW5kJTIwTG9hdGhpbmclMjBJbiUyMExhcyUyMFZlZ2FzJTI3JTNGIiwiY29ycmVjdF9hbnN3ZXIiOiJIdW50ZXIlMjBTLiUyMFRob21wc29uIiwiaW5jb3JyZWN0X2Fuc3dlcnMiOlsiRi4lMjBTY290dCUyMEZpdHpnZXJhbGQiLCJIZW5yeSUyME1pbGxlciIsIldpbGxpYW0lMjBTLiUyMEJ1cnJvdWdocyJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldoaWNoJTIwZmFtb3VzJTIwc3B5JTIwbm92ZWxpc3QlMjB3cm90ZSUyMHRoZSUyMGNoaWxkcmVucyUyNyUyMHN0b3J5JTIwJTIyQ2hpdHR5LUNoaXR0eS1CYW5nLUJhbmclMjIlM0YiLCJjb3JyZWN0X2Fuc3dlciI6IklhbiUyMEZsZW1pbmciLCJpbmNvcnJlY3RfYW5zd2VycyI6WyJKb3NlcGglMjBDb25yYWQiLCJKb2huJTIwQnVjaGFuIiwiR3JhaGFtJTIwR3JlZW5lIl19LHsiY2F0ZWdvcnkiOiJFbnRlcnRhaW5tZW50JTNBJTIwQm9va3MiLCJ0eXBlIjoibXVsdGlwbGUiLCJkaWZmaWN1bHR5IjoiZWFzeSIsInF1ZXN0aW9uIjoiV2hvJTIwd3JvdGUlMjB0aGUlMjB5b3VuZyUyMGFkdWx0JTIwbm92ZWwlMjAlMjJUaGUlMjBGYXVsdCUyMGluJTIwT3VyJTIwU3RhcnMlMjIlM0YiLCJjb3JyZWN0X2Fuc3dlciI6IkpvaG4lMjBHcmVlbiIsImluY29ycmVjdF9hbnN3ZXJzIjpbIlN0ZXBoZW5pZSUyME1leWVyIiwiU3V6YW5uZSUyMENvbGxpbnMiLCJTdGVwaGVuJTIwQ2hib3NreSJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldobyUyMHdhcyUyMHRoZSUyMGF1dGhvciUyMG9mJTIwdGhlJTIwMTk1NCUyMG5vdmVsJTJDJTIwJTIyTG9yZCUyMG9mJTIwdGhlJTIwRmxpZXMlMjIlM0YiLCJjb3JyZWN0X2Fuc3dlciI6IldpbGxpYW0lMjBHb2xkaW5nIiwiaW5jb3JyZWN0X2Fuc3dlcnMiOlsiU3RlcGhlbiUyMEtpbmciLCJGLiUyMFNjb3R0JTIwRml0emdlcmFsZCIsIkh1bnRlciUyMEZveCJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldoYXQlMjBpcyUyMHRoZSUyMG5hbWUlMjBvZiUyMHRoZSUyMHRocmVlJTIwaGVhZGVkJTIwZG9nJTIwaW4lMjBIYXJyeSUyMFBvdHRlciUyMGFuZCUyMHRoZSUyMFNvcmNlcmVyJTI3cyUyMFN0b25lJTNGIiwiY29ycmVjdF9hbnN3ZXIiOiJGbHVmZnkiLCJpbmNvcnJlY3RfYW5zd2VycyI6WyJTcGlrZSIsIlBvb2Z5IiwiU3BvdCJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldoYXQlMjBpcyUyMHRoZSUyMHRpdGxlJTIwb2YlMjB0aGUlMjBmaXJzdCUyMFNoZXJsb2NrJTIwSG9sbWVzJTIwYm9vayUyMGJ5JTIwQXJ0aHVyJTIwQ29uYW4lMjBEb3lsZSUzRiIsImNvcnJlY3RfYW5zd2VyIjoiQSUyMFN0dWR5JTIwaW4lMjBTY2FybGV0IiwiaW5jb3JyZWN0X2Fuc3dlcnMiOlsiVGhlJTIwU2lnbiUyMG9mJTIwdGhlJTIwRm91ciIsIkElMjBDYXNlJTIwb2YlMjBJZGVudGl0eSIsIlRoZSUyMERvaW5ncyUyMG9mJTIwUmFmZmxlcyUyMEhhdyJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldoYXQlMjdzJTIwdGhlJTIwc2Vjb25kJTIwYm9vayUyMGluJTIwR2VvcmdlJTIwUi4lMjBSLiUyME1hcnRpbiUyN3MlMjAlMjdBJTIwU29uZyUyMG9mJTIwSWNlJTIwYW5kJTIwRmlyZSUyNyUyMHNlcmllcyUzRiIsImNvcnJlY3RfYW5zd2VyIjoiQSUyMENsYXNoJTIwb2YlMjBLaW5ncyIsImluY29ycmVjdF9hbnN3ZXJzIjpbIkElMjBEYW5jZSUyMHdpdGglMjBEcmFnb25zIiwiQSUyMFN0b3JtJTIwb2YlMjBTd29yZHMiLCJBJTIwRmVhc3QlMjBmb3IlMjBDcm93cyJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldoYXQlMjB3YXMlMjB0aGUlMjBmaXJzdCUyMGV2ZXIlMjBlbnRyeSUyMHdyaXR0ZW4lMjBmb3IlMjB0aGUlMjBTQ1AlMjBGb3VuZGF0aW9uJTIwY29sbGFib3JhdGl2ZSUyMHdyaXRpbmclMjBwcm9qZWN0JTNGIiwiY29ycmVjdF9hbnN3ZXIiOiJTQ1AtMTczIiwiaW5jb3JyZWN0X2Fuc3dlcnMiOlsiU0NQLTAwMSIsIlNDUC05OTkiLCJTQ1AtMTQ1OSJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6ImVhc3kiLCJxdWVzdGlvbiI6IldoaWNoJTIwaXMlMjBOT1QlMjBhJTIwYm9vayUyMGluJTIwdGhlJTIwSGFycnklMjBQb3R0ZXIlMjBTZXJpZXMlM0YiLCJjb3JyZWN0X2Fuc3dlciI6IlRoZSUyMEhvdXNlJTIwRWxmIiwiaW5jb3JyZWN0X2Fuc3dlcnMiOlsiVGhlJTIwQ2hhbWJlciUyMG9mJTIwU2VjcmV0cyIsIlRoZSUyMFByaXNvbmVyJTIwb2YlMjBBemthYmFuIiwiVGhlJTIwRGVhdGhseSUyMEhhbGxvd3MiXX1dfQ=="
		},
		# Books - 10 - MEDIUM
		{
			"difficulty": Difficulty.medium,
			"category": Category("Books"),
			"url": "https://opentdb.com/api.php?amount=10&category=10&difficulty=medium&type=multiple&encode=url3986",
			"result": "eyJyZXNwb25zZV9jb2RlIjowLCJyZXN1bHRzIjpbeyJjYXRlZ29yeSI6IkVudGVydGFpbm1lbnQlM0ElMjBCb29rcyIsInR5cGUiOiJtdWx0aXBsZSIsImRpZmZpY3VsdHkiOiJtZWRpdW0iLCJxdWVzdGlvbiI6IldoaWNoJTIwb2YlMjB0aGUlMjBmb2xsb3dpbmclMjBhdXRob3JzJTIwd2FzJTIwbm90JTIwYm9ybiUyMGluJTIwRW5nbGFuZCUzRiUyMCIsImNvcnJlY3RfYW5zd2VyIjoiQXJ0aHVyJTIwQ29uYW4lMjBEb3lsZSIsImluY29ycmVjdF9hbnN3ZXJzIjpbIkdyYWhhbSUyMEdyZWVuZSIsIkglMjBHJTIwV2VsbHMiLCJBcnRodXIlMjBDJTIwQ2xhcmtlIl19LHsiY2F0ZWdvcnkiOiJFbnRlcnRhaW5tZW50JTNBJTIwQm9va3MiLCJ0eXBlIjoibXVsdGlwbGUiLCJkaWZmaWN1bHR5IjoibWVkaXVtIiwicXVlc3Rpb24iOiJCeSUyMHdoYXQlMjBuYW1lJTIwd2FzJTIwdGhlJTIwYXV0aG9yJTIwRXJpYyUyMEJsYWlyJTIwYmV0dGVyJTIwa25vd24lM0YiLCJjb3JyZWN0X2Fuc3dlciI6Ikdlb3JnZSUyME9yd2VsbCIsImluY29ycmVjdF9hbnN3ZXJzIjpbIkFsZG91cyUyMEh1eGxleSIsIkVybmVzdCUyMEhlbWluZ3dheSIsIlJheSUyMEJyYWRidXJ5Il19LHsiY2F0ZWdvcnkiOiJFbnRlcnRhaW5tZW50JTNBJTIwQm9va3MiLCJ0eXBlIjoibXVsdGlwbGUiLCJkaWZmaWN1bHR5IjoibWVkaXVtIiwicXVlc3Rpb24iOiJJbiUyMHRoZSUyMCUyMlRoZSUyMEhvYmJpdCUyMiUyQyUyMHdobyUyMGtpbGxzJTIwU21hdWclM0YiLCJjb3JyZWN0X2Fuc3dlciI6IkJhcmQiLCJpbmNvcnJlY3RfYW5zd2VycyI6WyJCaWxibyUyMEJhZ2dpbnMiLCJHYW5kYWxmJTIwdGhlJTIwR3JleSIsIkZyb2RvIl19LHsiY2F0ZWdvcnkiOiJFbnRlcnRhaW5tZW50JTNBJTIwQm9va3MiLCJ0eXBlIjoibXVsdGlwbGUiLCJkaWZmaWN1bHR5IjoibWVkaXVtIiwicXVlc3Rpb24iOiJKLksuJTIwUm93bGluZyUyMGNvbXBsZXRlZCUyMCUyMkhhcnJ5JTIwUG90dGVyJTIwYW5kJTIwdGhlJTIwRGVhdGhseSUyMEhhbGxvd3MlMjIlMjBpbiUyMHdoaWNoJTIwaG90ZWwlMjBpbiUyMEVkaW5idXJnaCUyQyUyMFNjb3RsYW5kJTNGIiwiY29ycmVjdF9hbnN3ZXIiOiJUaGUlMjBCYWxtb3JhbCIsImluY29ycmVjdF9hbnN3ZXJzIjpbIlRoZSUyMER1bnN0YW5lJTIwSG90ZWwiLCJIb3RlbCUyME5vdm90ZWwiLCJTaGVyYXRvbiUyMEdyYW5kJTIwSG90ZWwlMjAlMjYlMjBTcGEiXX0seyJjYXRlZ29yeSI6IkVudGVydGFpbm1lbnQlM0ElMjBCb29rcyIsInR5cGUiOiJtdWx0aXBsZSIsImRpZmZpY3VsdHkiOiJtZWRpdW0iLCJxdWVzdGlvbiI6IldoaWNoJTIwb2YlMjB0aGVzZSUyMGJvb2slMjBzZXJpZXMlMjBpcyUyMGJ5JTIwSmFtZXMlMjBQYXR0ZXJzb24lM0YiLCJjb3JyZWN0X2Fuc3dlciI6Ik1heGltdW0lMjBSaWRlIiwiaW5jb3JyZWN0X2Fuc3dlcnMiOlsiSGFycnklMjBQb3R0ZXIiLCJUaGUlMjBMZWdlbmQlMjBvZiUyMFhhbnRoIiwiVGhlJTIwQmFydGVtYWV1cyUyMFRyaWxvZ3kiXX0seyJjYXRlZ29yeSI6IkVudGVydGFpbm1lbnQlM0ElMjBCb29rcyIsInR5cGUiOiJtdWx0aXBsZSIsImRpZmZpY3VsdHkiOiJtZWRpdW0iLCJxdWVzdGlvbiI6IkluJTIwTWljaGFlbCUyMENyaWNodG9uJTI3cyUyMG5vdmVsJTIwJTIySnVyYXNzaWMlMjBQYXJrJTIyJTJDJTIwSm9obiUyMEhhbW1vbmQlMjBtZWV0cyUyMGhpcyUyMGRlbWlzZSUyMGF0JTIwdGhlJTIwY2xhd3MlMjBvZiUyMHdoaWNoJTIwZGlub3NhdXIlM0YiLCJjb3JyZWN0X2Fuc3dlciI6IlByb2NvbXBzb2duYXRodXMiLCJpbmNvcnJlY3RfYW5zd2VycyI6WyJEaWxvcGhvc2F1cnVzIiwiVHlyYW5ub3NhdXJ1cyUyMFJleCIsIlZlbG9jaXJhcHRvciJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6Im1lZGl1bSIsInF1ZXN0aW9uIjoiSW4lMjB0aGUlMjAlMjJIYXJyeSUyMFBvdHRlciUyMiUyMG5vdmVscyUyQyUyMHdoYXQlMjBtdXN0JTIwYSUyMEhvZ3dhcnRzJTIwc3R1ZGVudCUyMGRvJTIwdG8lMjBlbnRlciUyMHRoZSUyMFJhdmVuY2xhdyUyMENvbW1vbiUyMFJvb20lM0YiLCJjb3JyZWN0X2Fuc3dlciI6IkFuc3dlciUyMGElMjByaWRkbGUiLCJpbmNvcnJlY3RfYW5zd2VycyI6WyJSaHl0aG1pY2FsbHklMjB0YXAlMjBiYXJyZWxzJTIwd2l0aCUyMGElMjB3YW5kIiwiU3BlYWslMjBhJTIwcGFzc3dvcmQiLCJLbm9jayUyMGluJTIwc2VxdWVuY2UiXX0seyJjYXRlZ29yeSI6IkVudGVydGFpbm1lbnQlM0ElMjBCb29rcyIsInR5cGUiOiJtdWx0aXBsZSIsImRpZmZpY3VsdHkiOiJtZWRpdW0iLCJxdWVzdGlvbiI6IlRoZSUyMGJvb2slMjAlMjJGYWhyZW5oZWl0JTIwNDUxJTIyJTIwd2FzJTIwd3JpdHRlbiUyMGJ5JTIwd2hvbSUzRiIsImNvcnJlY3RfYW5zd2VyIjoiUmF5JTIwQnJhZGJ1cnkiLCJpbmNvcnJlY3RfYW5zd2VycyI6WyJSLiUyMEwuJTIwU3RpbmUiLCJXb2xmZ2FuZyUyMEFtYWRldXMlMjBNb3phcnQiLCJTdGVwaGVuJTIwS2luZyJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6Im1lZGl1bSIsInF1ZXN0aW9uIjoiV2hpY2glMjBub3ZlbCUyMGJ5JTIwSm9obiUyMEdyaXNoYW0lMjB3YXMlMjBjb25jZWl2ZWQlMjBvbiUyMGElMjByb2FkJTIwdHJpcCUyMHRvJTIwRmxvcmlkYSUyMHdoaWxlJTIwdGhpbmtpbmclMjBhYm91dCUyMHN0b2xlbiUyMGJvb2tzJTIwd2l0aCUyMGhpcyUyMHdpZmUlM0YiLCJjb3JyZWN0X2Fuc3dlciI6IkNhbWlubyUyMElzbGFuZCIsImluY29ycmVjdF9hbnN3ZXJzIjpbIlJvZ3VlJTIwTGF3eWVyIiwiR3JheSUyME1vdW50YWluIiwiVGhlJTIwTGl0aWdhdG9ycyJdfSx7ImNhdGVnb3J5IjoiRW50ZXJ0YWlubWVudCUzQSUyMEJvb2tzIiwidHlwZSI6Im11bHRpcGxlIiwiZGlmZmljdWx0eSI6Im1lZGl1bSIsInF1ZXN0aW9uIjoiV2hpY2glMjBvZiUyMHRoZSUyMGZvbGxvd2luZyUyMGlzJTIwbm90JTIwYSUyMHdvcmslMjBhdXRob3JlZCUyMGJ5JTIwRnlvZG9yJTIwRG9zdG9ldnNreSUzRiIsImNvcnJlY3RfYW5zd2VyIjoiQW5uYSUyMEthcmVuaW5hIiwiaW5jb3JyZWN0X2Fuc3dlcnMiOlsiTm90ZXMlMjBmcm9tJTIwdGhlJTIwVW5kZXJncm91bmQiLCJDcmltZSUyMGFuZCUyMFB1bmlzaG1lbnQiLCJUaGUlMjBCcm90aGVycyUyMEthcmFtYXpvdiJdfV19"
		}
	]

if __name__ == "__main__":
	unittest.main()